
import java.util.ArrayList;
import javax.swing.RowFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mehme
 */
public class JInternalFrame_product extends javax.swing.JInternalFrame implements JInternalFrames{
    
    DefaultTableModel model;
    ProductOperations prd_Operations = new ProductOperations();

    /**
     * Creates new form JInternalFrame_product
     */
    public JInternalFrame_product() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        
        model =(DefaultTableModel) Table_product.getModel();
        showAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TF_prd_id = new javax.swing.JTextField();
        TF_prd_name = new javax.swing.JTextField();
        TF_prd_category_id = new javax.swing.JTextField();
        TF_prd_color = new javax.swing.JTextField();
        TF_prd_costPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        TF_prd_sellPrice = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TF_prd_netProfit = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        TF_prd_quantity = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        TF_prd_simulationID = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TA_expalanation = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table_product = new javax.swing.JTable();
        Button_add = new javax.swing.JButton();
        Button_delete = new javax.swing.JButton();
        Button_update = new javax.swing.JButton();
        Button_clear = new javax.swing.JButton();
        TF_search = new javax.swing.JTextField();
        Button_calculateProfit = new javax.swing.JButton();
        label_message = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(16, 78, 139));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Product ID");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Product Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Category ID ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Product Color");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Cost Price");

        TF_prd_id.setEditable(false);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Sell Price");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Net Profit");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Quantity");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Simulation ID");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Explanation");

        TA_expalanation.setColumns(20);
        TA_expalanation.setRows(5);
        jScrollPane1.setViewportView(TA_expalanation);

        Table_product.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Category ID", "Product Color", "Cost Price", "Sell Price", "Net Profit", "Quantity", "Simulation ID", "Explanation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table_product.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_productMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Table_product);
        if (Table_product.getColumnModel().getColumnCount() > 0) {
            Table_product.getColumnModel().getColumn(0).setResizable(false);
            Table_product.getColumnModel().getColumn(1).setResizable(false);
            Table_product.getColumnModel().getColumn(2).setResizable(false);
            Table_product.getColumnModel().getColumn(3).setResizable(false);
            Table_product.getColumnModel().getColumn(4).setResizable(false);
            Table_product.getColumnModel().getColumn(5).setResizable(false);
            Table_product.getColumnModel().getColumn(6).setResizable(false);
            Table_product.getColumnModel().getColumn(7).setResizable(false);
            Table_product.getColumnModel().getColumn(8).setResizable(false);
            Table_product.getColumnModel().getColumn(9).setResizable(false);
        }

        Button_add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save.png"))); // NOI18N
        Button_add.setText("ADD");
        Button_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_addActionPerformed(evt);
            }
        });

        Button_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete.png"))); // NOI18N
        Button_delete.setText("DELETE");
        Button_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_deleteActionPerformed(evt);
            }
        });

        Button_update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/updated.png"))); // NOI18N
        Button_update.setText("UPDATE");
        Button_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_updateActionPerformed(evt);
            }
        });

        Button_clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clear.png"))); // NOI18N
        Button_clear.setText("CLEAR");
        Button_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_clearActionPerformed(evt);
            }
        });

        TF_search.setText("                                                                                                                                                                                      SEARCH AREA");
        TF_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TF_searchMouseClicked(evt);
            }
        });
        TF_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TF_searchKeyReleased(evt);
            }
        });

        Button_calculateProfit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calculate_profit.png"))); // NOI18N
        Button_calculateProfit.setText("CALCULATE THE PROFIT");
        Button_calculateProfit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_calculateProfitActionPerformed(evt);
            }
        });

        label_message.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1199, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TF_prd_id)
                                    .addComponent(TF_prd_name)
                                    .addComponent(TF_prd_category_id)
                                    .addComponent(TF_prd_color)
                                    .addComponent(TF_prd_costPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))
                                .addGap(128, 128, 128)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(label_message, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TF_prd_sellPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                            .addComponent(TF_prd_netProfit)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                            .addComponent(TF_prd_quantity)
                            .addComponent(TF_prd_simulationID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Button_add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Button_update, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Button_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Button_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(Button_calculateProfit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(89, 89, 89))
                    .addComponent(TF_search, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(TF_prd_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(TF_prd_sellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TF_prd_netProfit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TF_prd_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TF_prd_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(TF_prd_category_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Button_add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Button_delete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(TF_prd_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4))
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(TF_prd_costPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5))
                                    .addComponent(jLabel10))
                                .addGap(106, 106, 106)
                                .addComponent(label_message, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(TF_prd_simulationID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Button_update, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                            .addComponent(Button_clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(Button_calculateProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(TF_search, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_addActionPerformed
        
        if(TF_prd_netProfit.getText().trim().isEmpty()){
            
            label_message.setText("WARNING ! , CALCULATE THE NE PROFIT");
            
        
        }
        
        else{
            
        String prd_name = TF_prd_name.getText();
        int category_id = Integer.parseInt(TF_prd_category_id.getText());
        String prd_color = TF_prd_color.getText();
        float cost_price = Float.parseFloat(TF_prd_costPrice.getText());
        float sell_price = Float.parseFloat(TF_prd_sellPrice.getText());
        float net_profit = Float.parseFloat(TF_prd_netProfit.getText());
        int quantity = Integer.parseInt(TF_prd_quantity.getText());
        int simulation_id = Integer.parseInt(TF_prd_simulationID.getText());
        String explanation = TA_expalanation.getText();
        
        prd_Operations.addProduct(prd_name, category_id, prd_color, cost_price, sell_price, net_profit, quantity, simulation_id, explanation);
        
        showAll();
        
        }
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_Button_addActionPerformed

    private void Button_calculateProfitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_calculateProfitActionPerformed
        
        try {
            float net_profit = prd_Operations.calculateNetProfit(Float.parseFloat(TF_prd_costPrice.getText()), Float.parseFloat(TF_prd_sellPrice.getText()));
            String profit= String.valueOf(net_profit);
            TF_prd_netProfit.setText(profit);
        
        
        } catch (Exception e) {
            label_message.setText("ENTER THE VALUES OF COST PRICE AND SELL PRICE");
        }
        
        
        
    }//GEN-LAST:event_Button_calculateProfitActionPerformed

    private void Button_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_deleteActionPerformed
        
          
        int selectedrow = Table_product.getSelectedRow();
         if (selectedrow == -1) {
           if (model.getRowCount() == 0 ) {
               label_message.setText("TABLE IS EMPTY");
           }
           else {
               label_message.setText("PLEASE CHOOSE A PRODUCT");
           }
      
       }
       else {
           int id = (int)model.getValueAt(selectedrow,0);
           
           prd_Operations.delete(id);
           
           showAll();
           
           label_message.setText("PRODUCT IS DELETED SUCCESSFULLLY");
           clearAreas();
           
           
           
       }
        
        
        
        
    }//GEN-LAST:event_Button_deleteActionPerformed

    private void Button_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_updateActionPerformed
        
        String prd_name = TF_prd_name.getText();
        int category_id = Integer.parseInt(TF_prd_category_id.getText());
        String prd_color = TF_prd_color.getText();
        float cost_price = Float.parseFloat(TF_prd_costPrice.getText());
        float sell_price = Float.parseFloat(TF_prd_sellPrice.getText());
        float net_profit = Float.parseFloat(TF_prd_netProfit.getText());
        int quantity = Integer.parseInt(TF_prd_quantity.getText());
        int simulation_id = Integer.parseInt(TF_prd_simulationID.getText());
        String explanation = TA_expalanation.getText();
        
        int selectedrow = Table_product.getSelectedRow();
        
        if (selectedrow == -1) {
            
            if (model.getRowCount() == 0) {
                label_message.setText("TABLE IS EMPYT");
            }
            else {
                label_message.setText("PLEASE CHOOSE A PRODUCT");
            }
        }
        else {
            
            
            
            
            int id = (int)model.getValueAt(selectedrow,0);
            
            
            
            prd_Operations.updateProduct(id, prd_name, category_id, prd_color, cost_price, sell_price, net_profit, quantity, simulation_id, explanation);
            
            showAll();
            
            label_message.setText("PRODUCT IS UPDATE SUCCESSFULLLY");
        }
        
        
        
    }//GEN-LAST:event_Button_updateActionPerformed

    private void TF_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TF_searchKeyReleased
       
        
        String search = TF_search.getText();
        dynamicSearch(search);
        
    }//GEN-LAST:event_TF_searchKeyReleased

    private void Table_productMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_productMouseClicked
        
        int selectedrow = Table_product.getSelectedRow();
        TF_prd_id.setText(model.getValueAt(selectedrow, 0).toString());
        TF_prd_name.setText(model.getValueAt(selectedrow, 1).toString());
        TF_prd_category_id.setText(model.getValueAt(selectedrow, 2).toString());
        TF_prd_color.setText(model.getValueAt(selectedrow, 3).toString());
        TF_prd_costPrice.setText(model.getValueAt(selectedrow, 4).toString());
        TF_prd_sellPrice.setText(model.getValueAt(selectedrow, 5).toString());
        TF_prd_netProfit.setText(model.getValueAt(selectedrow, 6).toString());
        TF_prd_quantity.setText(model.getValueAt(selectedrow, 7).toString());
        TF_prd_simulationID.setText(model.getValueAt(selectedrow, 8).toString());
        TA_expalanation.setText(model.getValueAt(selectedrow, 9).toString());
        
        
    }//GEN-LAST:event_Table_productMouseClicked

    private void Button_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_clearActionPerformed
        clearAreas();
    }//GEN-LAST:event_Button_clearActionPerformed

    private void TF_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TF_searchMouseClicked
       TF_search.setText("");
    }//GEN-LAST:event_TF_searchMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_add;
    private javax.swing.JButton Button_calculateProfit;
    private javax.swing.JButton Button_clear;
    private javax.swing.JButton Button_delete;
    private javax.swing.JButton Button_update;
    private javax.swing.JTextArea TA_expalanation;
    private javax.swing.JTextField TF_prd_category_id;
    private javax.swing.JTextField TF_prd_color;
    private javax.swing.JTextField TF_prd_costPrice;
    private javax.swing.JTextField TF_prd_id;
    private javax.swing.JTextField TF_prd_name;
    private javax.swing.JTextField TF_prd_netProfit;
    private javax.swing.JTextField TF_prd_quantity;
    private javax.swing.JTextField TF_prd_sellPrice;
    private javax.swing.JTextField TF_prd_simulationID;
    private javax.swing.JTextField TF_search;
    private javax.swing.JTable Table_product;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label_message;
    // End of variables declaration//GEN-END:variables

    @Override
    public void showAll() {
        model.setRowCount(0);
        
        ArrayList<Product> prd = new ArrayList<Product>();
        
        prd  = prd_Operations.showProducts();
        
        
        if(prd != null){
            
            for(Product element : prd){
                
                Object[] x = {element.getPrd_id(),element.getPrd_name(),element.getCategorie_id(),element.getPrd_color(),element.getCost_price(),element.getSell_price(),element.getNet_profit(),element.getQuantity(),element.getSimulation_id(),element.getExplanation()};
                model.addRow(x);
                
            
            }
        
        
        }
        
    }

    @Override
    public void clearAreas() {
       TF_prd_id.setText("");
       TF_prd_name.setText("");
       TF_prd_category_id.setText("");
       TF_prd_color.setText("");
       TF_prd_costPrice.setText("");
       TF_prd_sellPrice.setText("");
       TF_prd_netProfit.setText("");
       TF_prd_quantity.setText("");
       TF_prd_simulationID.setText("");
       TA_expalanation.setText("");
       
    }

    @Override
    public void dynamicSearch(String search) {
        
        
         TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        
        
        Table_product.setRowSorter(tr);
        
        
        tr.setRowFilter(RowFilter.regexFilter(search));
        
    }
}
